/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Car;
import Business.FleetOfCars;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class ManufactureYearSearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManufactureYearSearchJPanel
     */
    private JPanel userProcessContainer;
    private FleetOfCars fleetOfCars;
    private ArrayList<Car> tempList = new ArrayList<Car>();

    ManufactureYearSearchJPanel(JPanel userProcessContainer, FleetOfCars fleetOfCars) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.fleetOfCars = fleetOfCars;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        yearTextField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        manufactureYearTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        availabilityCheckBox = new javax.swing.JCheckBox();
        viewCarDetailsBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        manufactureNameTextField = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Search By Manufacture Year/Manufacturer");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setText("Manufacture Year:");

        yearTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearTextFieldActionPerformed(evt);
            }
        });
        yearTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                yearTextFieldKeyTyped(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("<< BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        manufactureYearTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car Name", "Manufacturer", "Availability", "Year Of Manufacture", "Serial Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manufactureYearTable);
        if (manufactureYearTable.getColumnModel().getColumnCount() > 0) {
            manufactureYearTable.getColumnModel().getColumn(0).setResizable(false);
            manufactureYearTable.getColumnModel().getColumn(1).setResizable(false);
            manufactureYearTable.getColumnModel().getColumn(2).setResizable(false);
            manufactureYearTable.getColumnModel().getColumn(3).setResizable(false);
            manufactureYearTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel3.setText("Show Only Availabile:");

        availabilityCheckBox.setText("Yes");
        availabilityCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availabilityCheckBoxActionPerformed(evt);
            }
        });

        viewCarDetailsBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        viewCarDetailsBtn.setText("View Car Details");
        viewCarDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCarDetailsBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel4.setText("Manufacturer Name:");

        manufactureNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manufactureNameTextFieldActionPerformed(evt);
            }
        });
        manufactureNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                manufactureNameTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(manufactureNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(searchBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backBtn)
                        .addGap(128, 128, 128)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 843, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel3)
                        .addGap(42, 42, 42)
                        .addComponent(availabilityCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(viewCarDetailsBtn)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(manufactureNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(searchBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(availabilityCheckBox)
                        .addComponent(viewCarDetailsBtn))
                    .addComponent(jLabel3))
                .addContainerGap(194, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void yearTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearTextFieldActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed
    public void populate(ArrayList<Car> populateList) {
        DefaultTableModel defaultTableModel = (DefaultTableModel) manufactureYearTable.getModel();
        defaultTableModel.setRowCount(0);
        for (Car car : populateList) {
            Object[] row = new Object[5];
            row[0] = car;
            row[1] = car.getManufacturer();
            row[3] = car.getYearOFManufacture();
            row[4]= car.getSerialNumber();
            if (car.isAvailability()) {
                row[2] = "Available";
            } else {
                row[2] = "Not Available";
            }
            defaultTableModel.addRow(row);
        }
    }

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        int searchYear = 0;
        String ManufactureName = "";
        if (!yearTextField.getText().equals("") && !manufactureNameTextField.getText().equals("")) {
            searchYear = Integer.parseInt(yearTextField.getText());
            ManufactureName = manufactureNameTextField.getText().trim();
            tempList = fleetOfCars.searchByManufactureNameYear(ManufactureName, searchYear);
            if (tempList != null) {
                populate(tempList);
            } else {
                JOptionPane.showMessageDialog(null, "No Car Exist with given Manufacturer Name " + ManufactureName + " and Year " + searchYear);
            }
        } else if (!yearTextField.getText().equals("")) {
            searchYear = Integer.parseInt(yearTextField.getText());
            tempList = fleetOfCars.searchByManufactureYear(searchYear);
            if (tempList != null) {
                populate(tempList);
            } else {
                JOptionPane.showMessageDialog(null, "No Car Exist with given Manufacturing Year " + searchYear);
            }
        } else if (!manufactureNameTextField.getText().equals("")) {
            ManufactureName = manufactureNameTextField.getText().trim();
            tempList = fleetOfCars.searchByManufactureName(ManufactureName);
            if (tempList != null) {
                populate(tempList);
            } else {
                JOptionPane.showMessageDialog(null, "No Car Exist with given Manufacturer Name " + ManufactureName);
            }
        } else {
            if (yearTextField.getText().equals("") && manufactureNameTextField.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please input either Manufacturer Name or Manufacture Year");
            }

        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void viewCarDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCarDetailsBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = manufactureYearTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select A Row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Car car = (Car) manufactureYearTable.getValueAt(selectedRow, 0);
            SearchViewJPanel searchViewJPanel = new SearchViewJPanel(userProcessContainer, car);
            userProcessContainer.add("SearchViewJPanel", searchViewJPanel);
            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
            cardLayout.next(userProcessContainer);
        }
    }//GEN-LAST:event_viewCarDetailsBtnActionPerformed

    private void availabilityCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availabilityCheckBoxActionPerformed
        // TODO add your handling code here:
        if (availabilityCheckBox.isSelected()) {
            if (tempList != null && !tempList.isEmpty()) {
                ArrayList<Car> secondaryList = new ArrayList<Car>();
                for (Car car : tempList) {
                    if (car.isAvailability()) {
                        secondaryList.add(car);
                    }
                }
                if (secondaryList != null && !secondaryList.isEmpty()) {
                    populate(secondaryList);
                } else {
                    JOptionPane.showMessageDialog(null, "Sorry!! There are no cars available under this category.");
                    availabilityCheckBox.setSelected(false);
                }
            }

        } else {
            searchBtnActionPerformed(evt);
        }
    }//GEN-LAST:event_availabilityCheckBoxActionPerformed

    private void manufactureNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manufactureNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manufactureNameTextFieldActionPerformed

    private void yearTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearTextFieldKeyTyped
        // TODO add your handling code here:
        char enteredChar = evt.getKeyChar();
        if (!Character.isDigit(enteredChar) || (enteredChar == KeyEvent.VK_BACK_SPACE) || (enteredChar == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_yearTextFieldKeyTyped

    private void manufactureNameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_manufactureNameTextFieldKeyTyped
        // TODO add your handling code here:
        int code = evt.getKeyCode();
        char c = evt.getKeyChar();
        if (!Character.isLetter(c) && code != KeyEvent.VK_BACK_SPACE && !Character.isWhitespace(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_manufactureNameTextFieldKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox availabilityCheckBox;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField manufactureNameTextField;
    private javax.swing.JTable manufactureYearTable;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton viewCarDetailsBtn;
    private javax.swing.JTextField yearTextField;
    // End of variables declaration//GEN-END:variables
}
