/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Car;
import Business.FleetOfCars;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class FirstAvailableCarJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FirstAvailableCarJPanel
     */
    private JPanel userProcessContainer;
    private FleetOfCars fleetOfCars;
    private ArrayList<Car> tempList = new ArrayList<Car>();

    FirstAvailableCarJPanel(JPanel userProcessContainer, FleetOfCars fleetOfCars) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.fleetOfCars = fleetOfCars;
    }

    public void populate(ArrayList<Car> populateList) {
        DefaultTableModel defaultTableModel = (DefaultTableModel) viewJTable.getModel();
        defaultTableModel.setRowCount(0);
        for (Car car : populateList) {
            Object[] row = new Object[6];
            row[0] = car;
            row[1] = car.getCityOfOrigin();
            if (car.getMaintenceCerticateValidity()) {
                row[2] = "Valid";
            } else {
                row[2] = "Not Valid";
            }
            row[3] = car.getYearOFManufacture();
            row[4] = car.getSerialNumber();
            if (car.isAvailability()) {
                row[5] = "Available";
            } else {
                row[5] = "Not Available";
            }
            defaultTableModel.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        citySearchTextField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewJTable = new javax.swing.JTable();
        viewCarDetailsBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        validityCheckBox = new javax.swing.JCheckBox();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("SEARCH FIRST AVAILABLE CAR");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setText("City :");

        citySearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                citySearchTextFieldActionPerformed(evt);
            }
        });
        citySearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                citySearchTextFieldKeyTyped(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        viewJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car Name", "City", "Maintenance Certificate Validity", "Year Of Manufacture", "Serial Number", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewJTable);

        viewCarDetailsBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        viewCarDetailsBtn.setText("View Car Details");
        viewCarDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCarDetailsBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("<< BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel4.setText("Valid Maintenance Cerificate:");

        validityCheckBox.setText("Yes");
        validityCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validityCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(207, 207, 207)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(citySearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel4)
                        .addGap(30, 30, 30)
                        .addComponent(validityCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116)
                        .addComponent(viewCarDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 809, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backBtn))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(citySearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(validityCheckBox)
                    .addComponent(viewCarDetailsBtn))
                .addContainerGap(210, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void citySearchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_citySearchTextFieldKeyTyped
        // TODO add your handling code here:
        int code = evt.getKeyCode();
        char c = evt.getKeyChar();
        if (!Character.isLetter(c) && code != KeyEvent.VK_BACK_SPACE && !Character.isWhitespace(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_citySearchTextFieldKeyTyped

    private void viewCarDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCarDetailsBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select A Row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Car car = (Car) viewJTable.getValueAt(selectedRow, 0);
            SearchViewJPanel searchViewJPanel = new SearchViewJPanel(userProcessContainer, car);
            userProcessContainer.add("SearchViewJPanel", searchViewJPanel);
            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
            cardLayout.next(userProcessContainer);
        }
    }//GEN-LAST:event_viewCarDetailsBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String cityName = "";
        HashMap<Integer, ArrayList> checkMap = null;
        if (!citySearchTextField.getText().equals("")) {
            cityName = citySearchTextField.getText().trim();
            checkMap = fleetOfCars.searchFirstAvailable(cityName);
            if (checkMap.size() == 1 && checkMap != null && !checkMap.isEmpty()) {
                for (Map.Entry<Integer, ArrayList> entry : checkMap.entrySet()) {
                    Integer key = entry.getKey();
                    if (key == 1) {
                        tempList = entry.getValue();
                        if (tempList != null && !tempList.isEmpty()) {
                            populate(tempList);
                        }
                    } else if (key == 2) {
                        tempList = entry.getValue();
                        if (tempList != null && !tempList.isEmpty()) {
                            populate(tempList);
                            JOptionPane.showMessageDialog(null, "Currently there are no cars available in " + cityName + ". Showing cars in nearby cities.");
                        } else {
                            JOptionPane.showMessageDialog(null, "Sorry!! No Cars are currently Available in the given or any other locations");
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Sorry!! No Car Exist in Fleet Catalog Currently.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please Enter a City Name");
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void citySearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_citySearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_citySearchTextFieldActionPerformed

    private void validityCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validityCheckBoxActionPerformed
        // TODO add your handling code here:
        if (validityCheckBox.isSelected()) {
            if (tempList != null && !tempList.isEmpty()) {
                ArrayList<Car> secondaryList = new ArrayList<Car>();
                for (Car car : tempList) {
                    if (car.getMaintenceCerticateValidity()) {
                        secondaryList.add(car);
                    }
                }
                if (secondaryList != null && !secondaryList.isEmpty()) {
                    populate(secondaryList);
                } else {
                    JOptionPane.showMessageDialog(null, "Sorry!! There are no cars available under this category.");
                    validityCheckBox.setSelected(false);
                }
            }

        } else {
            searchBtnActionPerformed(evt);
        }
    }//GEN-LAST:event_validityCheckBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField citySearchTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchBtn;
    private javax.swing.JCheckBox validityCheckBox;
    private javax.swing.JButton viewCarDetailsBtn;
    private javax.swing.JTable viewJTable;
    // End of variables declaration//GEN-END:variables
}
