/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Car;
import Business.FleetOfCars;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhishek
 */
public class SeatRequirementSearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SeatRequirementSearchJPanel
     */
    private JPanel userProcessContainer;
    private FleetOfCars fleetOfCars;
    private int defaultMax = 0;
    ArrayList<Car> tempList = new ArrayList<Car>();

    public SeatRequirementSearchJPanel(JPanel userProcessContainer, FleetOfCars fleetOfCars) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.fleetOfCars = fleetOfCars;
        defaultMax = getCurrentMax();
        maxSeatsTextField.setText(defaultMax + "");
    }

    private int getCurrentMax() {
        for (Car fleetOfCar : fleetOfCars.getFleetOfCars()) {
            if (fleetOfCar.isAvailability() && fleetOfCar.getNumberOfseats() > defaultMax) {
                defaultMax = fleetOfCar.getNumberOfseats();
            }
        }
        return defaultMax;
    }

    public void populate(ArrayList<Car> populateList) {
        DefaultTableModel defaultTableModel = (DefaultTableModel) viewJTable.getModel();
        defaultTableModel.setRowCount(0);
        for (Car car : populateList) {
            Object[] row = new Object[6];
            row[0] = car;
            row[1] = car.getCityOfOrigin();
            row[2] = car.getManufacturer();
            row[3] = car.getYearOFManufacture();
            row[4] = car.getSerialNumber();
            if (car.isAvailability()) {
                row[5] = "Available";
            } else {
                row[5] = "Not Available";
            }
            defaultTableModel.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        numberOfSeatsTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        maxSeatsTextField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewJTable = new javax.swing.JTable();
        viewCarDetailsBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("SEARCH AVAILABLE CARS BY SEAT REQUIREMENT");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setText("Number of seats required:");

        numberOfSeatsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfSeatsTextFieldActionPerformed(evt);
            }
        });
        numberOfSeatsTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numberOfSeatsTextFieldKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel3.setText("Number of Seats Limiter");

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel5.setText("Maximum Number of Seats:");

        maxSeatsTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                maxSeatsTextFieldKeyTyped(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        viewJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car Name", "City", "Manufacturer", "Year Of Manufacture", "Serial Number", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewJTable);

        viewCarDetailsBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        viewCarDetailsBtn.setText("View Car Details");
        viewCarDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCarDetailsBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("<< BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(226, 226, 226))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(numberOfSeatsTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(maxSeatsTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(384, 384, 384)
                        .addComponent(viewCarDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(numberOfSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(maxSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewCarDetailsBtn)
                .addContainerGap(184, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void numberOfSeatsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfSeatsTextFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_numberOfSeatsTextFieldActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        int numberOfSeats = 0;
        int maximumSeats = 0;

        if (maxSeatsTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Maximum number of required seats cannot be empty.");
        } else if (Integer.parseInt(maxSeatsTextField.getText()) > defaultMax) {
            JOptionPane.showMessageDialog(null, "Maximum number seats required cannot be more than " + defaultMax);
        } else {
            if (!numberOfSeatsTextField.getText().equals("") && !maxSeatsTextField.getText().equals("")) {
                numberOfSeats = Integer.parseInt(numberOfSeatsTextField.getText());
                maximumSeats = Integer.parseInt(maxSeatsTextField.getText());
                tempList = fleetOfCars.searchBySeatNumbers(numberOfSeats, maximumSeats);
                if (tempList != null && !tempList.isEmpty()) {
                    populate(tempList);
                } else {
                    JOptionPane.showMessageDialog(null, "Sorry !! No car available with the this seat requirement");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter number of seats required");
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void numberOfSeatsTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberOfSeatsTextFieldKeyTyped
        // TODO add your handling code here:
        char enteredChar = evt.getKeyChar();
        if (!Character.isDigit(enteredChar) || (enteredChar == KeyEvent.VK_BACK_SPACE) || (enteredChar == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_numberOfSeatsTextFieldKeyTyped

    private void maxSeatsTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_maxSeatsTextFieldKeyTyped
        // TODO add your handling code here:
        char enteredChar = evt.getKeyChar();
        if (!Character.isDigit(enteredChar) || (enteredChar == KeyEvent.VK_BACK_SPACE) || (enteredChar == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_maxSeatsTextFieldKeyTyped

    private void viewCarDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCarDetailsBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select A Row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Car car = (Car) viewJTable.getValueAt(selectedRow, 0);
            SearchViewJPanel searchViewJPanel = new SearchViewJPanel(userProcessContainer, car);
            userProcessContainer.add("SearchViewJPanel", searchViewJPanel);
            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
            cardLayout.next(userProcessContainer);
        }
    }//GEN-LAST:event_viewCarDetailsBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField maxSeatsTextField;
    private javax.swing.JTextField numberOfSeatsTextField;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton viewCarDetailsBtn;
    private javax.swing.JTable viewJTable;
    // End of variables declaration//GEN-END:variables
}
